; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "Leiningen"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉examples.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉examples.core꞉> 
#'examples.chapter7.protocols/vw-up
clj꞉examples.chapter7.protocols꞉> 
; Syntax error compiling at (src/examples/chapter7/protocols.clj:7:1).
; Unable to resolve symbol: defrecord in this context
clj꞉examples.chapter7.protocols꞉> 
nil
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.CarModel
clj꞉examples.chapter7.protocols꞉> 
{:make "Toyota", :model "Corolla"}
clj꞉examples.chapter7.protocols꞉> 
{:make "Honda", :model "Civic"}
clj꞉examples.chapter7.protocols꞉> 
; Syntax error compiling def at (src/examples/chapter7/protocols.clj:11:1).
; First argument to def must be a Symbol
clj꞉examples.chapter7.protocols꞉> 
#'examples.chapter7.protocols/honda-civic
clj꞉examples.chapter7.protocols꞉> 
#'examples.chapter7.protocols/toyota-corolla
clj꞉examples.chapter7.protocols꞉> 
clojure.lang.PersistentArrayMap
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.CarModel
clj꞉examples.chapter7.protocols꞉> 
clojure.lang.PersistentArrayMap
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.CarModel
clj꞉examples.chapter7.protocols꞉> 
Display
clj꞉examples.chapter7.protocols꞉> 
; Syntax error (IllegalArgumentException) compiling deftype* at (src/examples/chapter7/protocols.clj:12:1).
; Must supply at least one argument for 'this' in: title
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.CarModel
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.CarModel
clj꞉examples.chapter7.protocols꞉> 
#'examples.chapter7.protocols/toyota-corolla
clj꞉examples.chapter7.protocols꞉> 
#'examples.chapter7.protocols/honda-civic
clj꞉examples.chapter7.protocols꞉> 
"Toyota - Corolla"
clj꞉examples.chapter7.protocols꞉> 
; Syntax error (IllegalArgumentException) compiling description at (src/examples/chapter7/protocols.clj:25:1).
; No single method: description of interface: examples.chapter7.protocols.Display found for function: description of protocol: Display
clj꞉examples.chapter7.protocols꞉> 
; Execution error (AbstractMethodError) at examples.chapter7.protocols/eval8012 (form-init9228648601965814285.clj:25).
; Receiver class examples.chapter7.protocols.CarModel does not define or inherit an implementation of the resolved method 'abstract java.lang.Object description(java.lang.Object)' of interface examples.chapter7.protocols.Display.
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.CarModel
clj꞉examples.chapter7.protocols꞉> 
; Execution error (AbstractMethodError) at examples.chapter7.protocols/eval8038 (form-init9228648601965814285.clj:26).
; Receiver class examples.chapter7.protocols.CarModel does not define or inherit an implementation of the resolved method 'abstract java.lang.Object description(java.lang.Object)' of interface examples.chapter7.protocols.Display.
clj꞉examples.chapter7.protocols꞉> 
#'examples.chapter7.protocols/toyota-corolla
clj꞉examples.chapter7.protocols꞉> 
"Corolla is the best asdssa"
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.Product
clj꞉examples.chapter7.protocols꞉> 
{:name "TV Samsumg"}
clj꞉examples.chapter7.protocols꞉> 
; Syntax error (IllegalArgumentException) compiling description at (src/examples/chapter7/protocols.clj:36:25).
; No single method: description of interface: examples.chapter7.protocols.Display found for function: description of protocol: Display
clj꞉examples.chapter7.protocols꞉> 
"This is the product TV Samsumgand The product TV Samsumgis the best big"
clj꞉examples.chapter7.protocols꞉> 
"This is the product TV Samsumg and The product TV Samsumgis the best big"
clj꞉examples.chapter7.protocols꞉> 
examples.chapter7.protocols.Product
clj꞉examples.chapter7.protocols꞉> nil
clj꞉examples.chapter7.protocols꞉> 
"This is the product clojure.core$name@2a9d1b9e and The product clojure.core$name@2a9d1b9eis the best big"
clj꞉examples.chapter7.protocols꞉> 
nil
clj꞉examples.chapter7.records꞉> 
examples.chapter7.records.Note
clj꞉examples.chapter7.records꞉> 
{:pitch :D#, :octate 4, :duration 1/2}
clj꞉examples.chapter7.records꞉> 
:D#
clj꞉examples.chapter7.records꞉> 
:D#
clj꞉examples.chapter7.records꞉> 
true
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/d#
clj꞉examples.chapter7.records꞉> 
examples.chapter7.records.Note
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/d#
clj꞉examples.chapter7.records꞉> 
{:pitch :D4, :octave 4, :duration 1/2, :octava 8}
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/d#
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/d#
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/d#
clj꞉examples.chapter7.records꞉> 
{:pitch :D4, :octave 8, :duration 1/2}
clj꞉examples.chapter7.records꞉> 
{:pitch :D4, :octave 5, :duration 1/2}
clj꞉examples.chapter7.records꞉> 
{:pitch :D4, :octave 4, :duration 1/2, :velocity 100}
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/new-d#
clj꞉examples.chapter7.records꞉> 
examples.chapter7.records.Note
clj꞉examples.chapter7.records꞉> 
examples.chapter7.records.Note
clj꞉examples.chapter7.records꞉> 
clojure.lang.PersistentArrayMap
clj꞉examples.chapter7.records꞉> 
MidiNite
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
MidiNote
; Warning: protocol #'examples.chapter7.records/MidiNote is overwriting method to-mesc of protocol MidiNite
; 
; Warning: protocol #'examples.chapter7.records/MidiNote is overwriting method key-number of protocol MidiNite
; 
; Warning: protocol #'examples.chapter7.records/MidiNote is overwriting method play of protocol MidiNite
clj꞉examples.chapter7.records꞉> 
MidiNote
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/perform
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/perform
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/close-enconters
clj꞉examples.chapter7.records꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "Leiningen"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉examples.core꞉> 
; Jack-in done.
clj꞉examples.core꞉> 
; Syntax error compiling at (src/examples/chapter7/records.clj:33:1).
; Unable to resolve symbol: Note in this context
clj꞉examples.chapter7.records꞉> 
; Syntax error compiling at (src/examples/chapter7/records.clj:33:1).
; Unable to resolve symbol: Note in this context
clj꞉examples.chapter7.records꞉> 
; Syntax error compiling at (src/examples/chapter7/records.clj:61:1).
; Unable to resolve symbol: perform in this context
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
examples.chapter7.records.Note
clj꞉examples.chapter7.records꞉> 
MidiNote
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/perform
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/close-enconters
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
nil
clj꞉examples.chapter7.records꞉> 
#'examples.chapter7.records/close-enconters
clj꞉examples.chapter7.records꞉> 
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "Leiningen"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; nREPL Connection was closed
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉examples.core꞉> 
; Jack-in done.
clj꞉examples.core꞉> 
