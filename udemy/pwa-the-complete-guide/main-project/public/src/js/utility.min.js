function writeData(t,e){return dbPromise.then(function(r){var n=r.transaction(t,"readwrite");return n.objectStore(t).put(e),n.complete})}function readAllData(t){return dbPromise.then(function(e){return e.transaction(t,"readonly").objectStore(t).getAll()})}function clearAllData(t){return dbPromise.then(function(e){var r=e.transaction(t,"readwrite");return r.objectStore(t).clear(),r.complete})}function deleteItemFromData(t,e){dbPromise.then(function(r){var n=r.transaction(t,"readwrite");return n.objectStore(t).delete(e),n.complete}).then(function(){console.log("Item deleted!")})}function urlBase64ToUint8Array(t){for(var e=(t+"=".repeat((4-t.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),r=window.atob(e),n=new Uint8Array(r.length),o=0;o<r.length;++o)n[o]=r.charCodeAt(o);return n}function dataURItoBlob(t){for(var e=atob(t.split(",")[1]),r=t.split(",")[0].split(":")[1].split(";")[0],n=new ArrayBuffer(e.length),o=new Uint8Array(n),a=0;a<e.length;a++)o[a]=e.charCodeAt(a);return new Blob([n],{type:r})}var dbPromise=idb.open("posts-store",1,function(t){t.objectStoreNames.contains("posts")||t.createObjectStore("posts",{keyPath:"id"}),t.objectStoreNames.contains("sync-posts")||t.createObjectStore("sync-posts",{keyPath:"id"})});